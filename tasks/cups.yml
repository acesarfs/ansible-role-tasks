- name: Install packages for cups and tea4cups
  apt:
    name: "{{ packages }}"
    state: present
    update_cache: True
  vars:
    packages:
    - cups-tea4cups
    - subversion
    - python2

########## instalação do pip2 para instala o pkpgcounter
- name: Download get-pip.py
  ansible.builtin.get_url:
    url: https://bootstrap.pypa.io/pip/2.7/get-pip.py
    dest: /opt/get-pip.py

- name: "install pip2"
  shell: python2 get-pip.py
  args:
    chdir: /opt/

- name: "install pip2 pillow"
  shell: python2 -m pip install pillow

########## instalação da lib para conectar mariadb
- name: "install mysql-connector-python"
  command: python3 -m pip install mysql-connector-python

########## instalação do pkpgcounter
- name: Checkout pkpgcounter
  subversion:
    repo: http://svn.pykota.com/pkpgcounter/trunk
    dest: /opt/pkpgcounter
    in_place: yes

- name: "install pkpgcounter"
  shell: /usr/bin/python2 setup.py install
  args:
    chdir: /opt/pkpgcounter

##########
- name: download printers to ignore in quota
  get_url:
    url: "{{ tasks_cups_url_ignore_printers }}"
    dest: /root/printers2ignore.json
    mode: '0440'

- name: copy quota check - php
  template:
    src: 'cups/tea4cups/php/quota_check.j2'
    dest: /root/quota_check
    mode: 0755
  when: tasks_cups_use_php_backend

- name: copy quota save  - php
  template:
    src: 'cups/tea4cups/php/quota_save.j2'
    dest: '/root/quota_save'
    mode: 0755
  when: tasks_cups_use_php_backend

- name: copy quota check - python
  template:
    src: 'cups/tea4cups/python/quota_check.j2'
    dest: /root/quota_check
    mode: 0755
  when: not tasks_cups_use_php_backend

- name: copy quota save - python
  template:
    src: 'cups/tea4cups/python/quota_save.j2'
    dest: '/root/quota_save'
    mode: 0755
  when: not tasks_cups_use_php_backend

##########
- name: quota check line  on /etc/cups/tea4cups.conf
  lineinfile:
    path: '/etc/cups/tea4cups.conf'
    state: present
    create: yes
    line: 'prehook_quotacheck : /root/quota_check'

- name: quota save line on /etc/cups/tea4cups.conf
  lineinfile:
    path: '/etc/cups/tea4cups.conf'
    state: present
    create: yes
    line: 'posthook_quotasave : /root/quota_save'

###### Redes permitidas - Início
- name: 'Lê arquivo csv com as redes permitidas'
  set_fact:
    tasks_cups_csv_file_content: "{{ lookup('file', tasks_cups_networks_csv) }}"

- name: 'Constrói o array template_cups_allowed_networks a partir de um csv'
  set_fact:
    tasks_cups_template_cups_allowed_networks: "{{ tasks_cups_csv_file_content.split('\n') }}"
###### Redes permitidas - Fim

- include: partials/printers.yml

- name:
  include_role:
    name: HP41.cups
  vars:
    cups_cupsd_conf_template: "cupsd.conf.j2"
    cups_expect_pkgs: 
      - expect
    cups_ricoh_openprinting_ppds: False
    cups_purge_all_printers_and_classes: True
    cups_packages_to_install:
      - cups
      - cups-pdf
      - foomatic-db-engine
      - printer-driver-all
      - hp-ppd
      - openprinting-ppds

# Instalação manual de impressoras - sem usar a role
- include: partials/proaluno_printers.yml
- include: partials/pdfprinter.yml

- name: org.cups.cupsd.socket.d
  file:
    path: /etc/systemd/system/org.cups.cupsd.socket.d/
    recurse: yes
    state: directory

- name: copy socket
  template:
    src: cups/override.conf
    dest: /etc/systemd/system/org.cups.cupsd.socket.d/override.conf

# Essa task não funciona - Arrumar
#- name: change root password
#  user:
#    name: root
#    update_password: always
#    password: " {{ tasks_cups_root_password | password_hash('sha512') }}"

- name: Restart service
  service:
    name: cups
    state: restarted



